
// PTN Ninja by Craig Laparo is licensed under a Creative Commons
// Attribution-NonCommercial-ShareAlike 4.0 International License.
// http://creativecommons.org/licenses/by-nc-sa/4.0/

$stone-thickness: 0.3vmin;

#viewer {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 0;
  transition: opacity $time-smooth $natural;
  will-change: opacity;

  html.playmode & {
    opacity: 1 !important;
  }
}

.board {
  $top-margin: 10vmin;

  position: absolute;
  top: calc(50% - #{50vmin - $top-margin} + #{($edge*3 + $button-height) / 2});
  right: calc(#{$edge}*2 + #{$fab-height});
  width: calc(#{100vmin - $top-margin} - #{$edge*3 + $button-height});
  height: calc(#{100vmin - $top-margin} - #{$edge*3 + $button-height});
  font-size: 3vmin;
  background-color: $primary-color-500;

  #viewer.animated & {
    transition: all $time-smooth $natural;
    will-change: top, right;
  }

  html.playmode.show-play-controls & {
    top: calc(#{$edge} + 50% - #{50vmin - $top-margin} + 0.5em);
  }
  html.playmode & {
    right: calc(1em + 50% - #{50vmin - $top-margin/2} + #{($edge*3 + $button-height) / 2});
    z-index: 1;
  }

  @media (max-aspect-ratio: $aspect-centered) {
    right: calc(1em + 50% - #{50vmin - $top-margin/2} + #{($edge*3 + $button-height) / 2});
  }

  @media (max-aspect-ratio: $aspect-compact) {
    top: calc(50% - #{50vmin - $top-margin/2}) !important;
    right: $edge !important;
    width: calc(100vmin - #{$edge});
    height: calc(100vmin - #{$edge});
  }

  .squares,
  .pieces {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }

  .squares {
    background-color: darken($primary-color-300, 1.5%);
  }

  .square {
    position: absolute;

    &.light {
      background-color: $primary-color-300;
    }

    &:before {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      opacity: 0;
      pointer-events: none;
      background-color: $accent-color-500;
      will-change: opacity;

      html.animate-pieces & {
        transition: opacity $time-smooth $natural;
      }
    }
    html.editmode-square-hl.editmode &.active:before,
    html.playmode-square-hl.playmode &.active:before {
      opacity: 0.65;
    }

    .road {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      opacity: 0.25;

      > div {
        opacity: 0;
        position: absolute;
        will-change: opacity;
        top: 35%;
        bottom: 35%;
        left: 35%;
        right: 35%;

        html.animate-pieces & {
          transition: opacity $time-smooth $natural,
            background-color $time-smooth $natural;
        }
      }

      .up { top: 0; }
      .down { bottom: 0; }
      .left { left: 0; }
      .right { right: 0; }
    }

    html.show-roads &.up .road .up,
    html.show-roads &.down .road .down,
    html.show-roads &.left .road .left,
    html.show-roads &.right .road .right { opacity: 1; }

    &.p1 .road > div { background-color: $primary-color-100 }
    &.p2 .road > div { background-color: $primary-color-700 }
  }

  .pieces {
    transform-style: preserve-3d;
  }

  .piece {
    position: absolute;
    bottom: 0;
    left: 0;
    will-change: transform, opacity;

    html.animate-pieces & {
      transition: transform $time-smooth $natural,
        opacity $time-smooth $natural;
    }

    &.unplayed {
      html:not(.show-unplayed-pieces) & {
        opacity: 0;
      }
    }

    .stone, .captive {
      box-shadow: $shadow1;

      &.p1 {
        background-color: $primary-color-100;
        border-color: $primary-color-600;
      }
      &.p2 {
        background-color: $primary-color-600;
        border-color: $primary-color-900;
      }
    }

    .stone {
      width: 50%;
      height: 50%;
      margin: 25%;
      border-radius: 10%;
      position: relative;
      will-change: transform, width, border-radius, margin-left;

      html.animate-pieces & {
        transition: all $time-smooth $natural;
      }
    }

    &:not(.unplayed) .stone.S {
      width: 18.75%;
      border-radius: 27%/10%;
      margin-left: 40.625%;

      &.p1 {
        background-color: $primary-color-50;
        transform: rotate(-45deg);
        box-shadow: -1px 1px 2px 0 rgba(0,0,0,0.14), -1px 1px 5px 0 rgba(0,0,0,0.12), -1px 1px 1px -2px rgba(0,0,0,0.4);
      }
      &.p2 {
        background-color: $primary-color-700;
        transform: rotate(45deg);
        box-shadow: 1px 1px 2px 0 rgba(0,0,0,0.14), 1px 1px 5px 0 rgba(0,0,0,0.12), 1px 1px 1px -2px rgba(0,0,0,0.4);
      }
    }

    .stone.C {
      border-radius: 50%;

      &.p1 {
        background-color: $primary-color-50;
      }
      &.p2 {
        background-color: $primary-color-700;
      }
    }

    .captive {
      position: absolute;
      bottom: 25%;
      right: 25%;
      width: 15%;
      height: 7.5%;
      opacity: 0;
      border-radius: 15%/30%;
      will-change: opacity, right;

      html.animate-pieces & {
        transition: all $time-smooth $natural;
      }
    }

    &.immovable {
      .stone { opacity: 0; }
      .captive {
        opacity: 1;
        right: 5%;
      }
    }
  }

  .scores {
    position: absolute;
    top: -$top-margin;
    left: 0;
    right: 0;
    line-height: normal;
    transition: opacity $time-smooth $natural;
    will-change: opacity;

    html:not(.show-player-scores) & {
      opacity: 0;
    }

    > .player1, > .player2 {
      position: absolute;
      top: 0;
      width: 50%;
      display: flex;
      padding: 0.2em;
      box-sizing: border-box;
      border-radius: $stone-thickness;
      font-size: $top-margin/4;
    }

    .name, .score {
      padding: 0 0.25em;
    }

    .name {
      flex-grow: 1;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .score {
      width: 1.25em;
      flex-grow: 0;
      flex-shrink: 0;
      will-change: content;
    }

    > .player1 {
      left: 0;
      background-color: $primary-color-100;
      color: $primary-color-700;

      .score {
        text-align: right;
      }
    }

    > .player2 {
      right: 0;
      background-color: $primary-color-700;
      color: $primary-color-100;

      .name {
        text-align: right;
      }
    }

    @media (max-aspect-ratio: $aspect-compact) {
      top: -#{$top-margin + 3};

      .name, .score {
        font-size: $top-margin/3;
      }
    }
  }

  .ptn {
    line-height: normal;
    position: absolute;
    top: -$top-margin/2;
    left: 0;
    right: 0;
    transition: opacity $time-smooth $natural;
    will-change: content, opacity;

    html:not(.show-current-move) & {
      opacity: 0;
    }

    .space:first-child, .comment {
      display: none;
    }

    .player1, .player2 {
      padding: 0 0.2em;
    }

    .ply {
      position: absolute;
      right: 51%;
      max-width: 49%;
      overflow: hidden;
      text-overflow: ellipsis;

      ~ .ply {
        right: auto;
        left: 51%;
      }
    }

    .result {
      position: absolute;
      right: 0;
    }
  }

  .labels {
    color: $primary-color-100;
    position: absolute;
    font-size: 1em;
    display: flex;
    justify-content: space-around;
    opacity: 0;
    transition: opacity $time-smooth $natural;
    @include unselectable;

    html.show-axis-labels & {
      opacity: 1;
    }

    &.row {
      top: 0;
      left: -2em;
      flex-direction: column-reverse;
      width: 2em;
      height: 100%;
      text-align: center;
    }
    &.col {
      bottom: -2em;
      right: 0;
      flex-direction: row;
      width: 100%;
      height: 2em;
      line-height: 2em;
    }
  }
}

@for $size from 3 through 9 {
  .size-#{$size} .square,
  .size-#{$size} .piece {
    width: percentage(1/$size);
    height: percentage(1/$size);
  }

  @for $col from 0 through $size - 1 {
    .size-#{$size} .c#{$col} {
      left: percentage($col/$size);
    }
  }
  @for $row from 0 through $size - 1 {
    .size-#{$size} .r#{$row} {
      bottom: percentage($row/$size);
    }
  }
}
